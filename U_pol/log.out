Log started at: 2025-02-17 13:53:52
%%%%%%%%%%% STARTING IMIDAZOLE U_IND CALCULATION %%%%%%%%%%%%
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
=-=-=-=-=-=-=-=-=-=-=-=-OpenMM Output-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
total Energy = 0.41626060009002686 kJ/mol
<class 'openmm.openmm.NonbondedForce'>-0.4206199645996094 kJ/mol
<class 'openmm.openmm.DrudeForce'>0.8368805646896362 kJ/mol
<class 'openmm.openmm.CMMotionRemover'>0.0 kJ/mol
natoms_per_res=9
natoms=14
ncore=15
nmol=3
residue_list=<generator object Topology.residues at 0x1555123432a0>
tholeMatrix.shape=(3, 9, 9)
screened_params=[0, 1, 2.0]
drude0=9
core0=1
alpha0=0.0010466
imol=0
prt1_params=[10, 0, -1, -1, -1, Quantity(value=-0.8404, unit=elementary charge), Quantity(value=0.0010466, unit=nanometer**3), 0.0, 0.0]
drude1=10
core1=0
alpha1=0.0010466
thole=2.0
(core0,natoms)=(1,14)
(core1,natoms)=(0,14)
screened_params=[0, 2, 2.0]
drude0=9
core0=1
alpha0=0.0010466
imol=0
prt1_params=[11, 8, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=11
core1=8
alpha1=0.00195233
thole=2.0
(core0,natoms)=(1,14)
(core1,natoms)=(8,14)
screened_params=[1, 2, 2.0]
drude0=10
core0=0
alpha0=0.0010466
imol=0
prt1_params=[11, 8, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=11
core1=8
alpha1=0.00195233
thole=2.0
(core0,natoms)=(0,14)
(core1,natoms)=(8,14)
screened_params=[0, 3, 2.0]
drude0=9
core0=1
alpha0=0.0010466
imol=0
prt1_params=[12, 6, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=12
core1=6
alpha1=0.00195233
thole=2.0
(core0,natoms)=(1,14)
(core1,natoms)=(6,14)
screened_params=[1, 3, 2.0]
drude0=10
core0=0
alpha0=0.0010466
imol=0
prt1_params=[12, 6, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=12
core1=6
alpha1=0.00195233
thole=2.0
(core0,natoms)=(0,14)
(core1,natoms)=(6,14)
screened_params=[2, 3, 2.0]
drude0=11
core0=8
alpha0=0.00195233
imol=0
prt1_params=[12, 6, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=12
core1=6
alpha1=0.00195233
thole=2.0
(core0,natoms)=(8,14)
(core1,natoms)=(6,14)
screened_params=[0, 4, 2.0]
drude0=9
core0=1
alpha0=0.0010466
imol=0
prt1_params=[13, 7, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=13
core1=7
alpha1=0.00195233
thole=2.0
(core0,natoms)=(1,14)
(core1,natoms)=(7,14)
screened_params=[1, 4, 2.0]
drude0=10
core0=0
alpha0=0.0010466
imol=0
prt1_params=[13, 7, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=13
core1=7
alpha1=0.00195233
thole=2.0
(core0,natoms)=(0,14)
(core1,natoms)=(7,14)
screened_params=[2, 4, 2.0]
drude0=11
core0=8
alpha0=0.00195233
imol=0
prt1_params=[13, 7, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=13
core1=7
alpha1=0.00195233
thole=2.0
(core0,natoms)=(8,14)
(core1,natoms)=(7,14)
screened_params=[3, 4, 2.0]
drude0=12
core0=6
alpha0=0.00195233
imol=0
prt1_params=[13, 7, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=13
core1=7
alpha1=0.00195233
thole=2.0
(core0,natoms)=(6,14)
(core1,natoms)=(7,14)
screened_params=[5, 6, 2.0]
drude0=23
core0=15
alpha0=0.0010466
imol=1
prt1_params=[24, 14, -1, -1, -1, Quantity(value=-0.8404, unit=elementary charge), Quantity(value=0.0010466, unit=nanometer**3), 0.0, 0.0]
drude1=24
core1=14
alpha1=0.0010466
thole=2.0
(core0,natoms)=(15,14)
(core1,natoms)=(14,14)
screened_params=[5, 7, 2.0]
drude0=23
core0=15
alpha0=0.0010466
imol=1
prt1_params=[25, 22, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=25
core1=22
alpha1=0.00195233
thole=2.0
(core0,natoms)=(15,14)
(core1,natoms)=(22,14)
screened_params=[6, 7, 2.0]
drude0=24
core0=14
alpha0=0.0010466
imol=1
prt1_params=[25, 22, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=25
core1=22
alpha1=0.00195233
thole=2.0
(core0,natoms)=(14,14)
(core1,natoms)=(22,14)
screened_params=[5, 8, 2.0]
drude0=23
core0=15
alpha0=0.0010466
imol=1
prt1_params=[26, 20, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=26
core1=20
alpha1=0.00195233
thole=2.0
(core0,natoms)=(15,14)
(core1,natoms)=(20,14)
screened_params=[6, 8, 2.0]
drude0=24
core0=14
alpha0=0.0010466
imol=1
prt1_params=[26, 20, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=26
core1=20
alpha1=0.00195233
thole=2.0
(core0,natoms)=(14,14)
(core1,natoms)=(20,14)
screened_params=[7, 8, 2.0]
drude0=25
core0=22
alpha0=0.00195233
imol=1
prt1_params=[26, 20, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=26
core1=20
alpha1=0.00195233
thole=2.0
(core0,natoms)=(22,14)
(core1,natoms)=(20,14)
screened_params=[5, 9, 2.0]
drude0=23
core0=15
alpha0=0.0010466
imol=1
prt1_params=[27, 21, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=27
core1=21
alpha1=0.00195233
thole=2.0
(core0,natoms)=(15,14)
(core1,natoms)=(21,14)
screened_params=[6, 9, 2.0]
drude0=24
core0=14
alpha0=0.0010466
imol=1
prt1_params=[27, 21, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=27
core1=21
alpha1=0.00195233
thole=2.0
(core0,natoms)=(14,14)
(core1,natoms)=(21,14)
screened_params=[7, 9, 2.0]
drude0=25
core0=22
alpha0=0.00195233
imol=1
prt1_params=[27, 21, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=27
core1=21
alpha1=0.00195233
thole=2.0
(core0,natoms)=(22,14)
(core1,natoms)=(21,14)
screened_params=[8, 9, 2.0]
drude0=26
core0=20
alpha0=0.00195233
imol=1
prt1_params=[27, 21, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=27
core1=21
alpha1=0.00195233
thole=2.0
(core0,natoms)=(20,14)
(core1,natoms)=(21,14)
screened_params=[10, 11, 2.0]
drude0=37
core0=29
alpha0=0.0010466
imol=2
prt1_params=[38, 28, -1, -1, -1, Quantity(value=-0.8404, unit=elementary charge), Quantity(value=0.0010466, unit=nanometer**3), 0.0, 0.0]
drude1=38
core1=28
alpha1=0.0010466
thole=2.0
(core0,natoms)=(29,14)
(core1,natoms)=(28,14)
screened_params=[10, 12, 2.0]
drude0=37
core0=29
alpha0=0.0010466
imol=2
prt1_params=[39, 36, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=39
core1=36
alpha1=0.00195233
thole=2.0
(core0,natoms)=(29,14)
(core1,natoms)=(36,14)
screened_params=[11, 12, 2.0]
drude0=38
core0=28
alpha0=0.0010466
imol=2
prt1_params=[39, 36, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=39
core1=36
alpha1=0.00195233
thole=2.0
(core0,natoms)=(28,14)
(core1,natoms)=(36,14)
screened_params=[10, 13, 2.0]
drude0=37
core0=29
alpha0=0.0010466
imol=2
prt1_params=[40, 34, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=40
core1=34
alpha1=0.00195233
thole=2.0
(core0,natoms)=(29,14)
(core1,natoms)=(34,14)
screened_params=[11, 13, 2.0]
drude0=38
core0=28
alpha0=0.0010466
imol=2
prt1_params=[40, 34, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=40
core1=34
alpha1=0.00195233
thole=2.0
(core0,natoms)=(28,14)
(core1,natoms)=(34,14)
screened_params=[12, 13, 2.0]
drude0=39
core0=36
alpha0=0.00195233
imol=2
prt1_params=[40, 34, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=40
core1=34
alpha1=0.00195233
thole=2.0
(core0,natoms)=(36,14)
(core1,natoms)=(34,14)
screened_params=[10, 14, 2.0]
drude0=37
core0=29
alpha0=0.0010466
imol=2
prt1_params=[41, 35, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=41
core1=35
alpha1=0.00195233
thole=2.0
(core0,natoms)=(29,14)
(core1,natoms)=(35,14)
screened_params=[11, 14, 2.0]
drude0=38
core0=28
alpha0=0.0010466
imol=2
prt1_params=[41, 35, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=41
core1=35
alpha1=0.00195233
thole=2.0
(core0,natoms)=(28,14)
(core1,natoms)=(35,14)
screened_params=[12, 14, 2.0]
drude0=39
core0=36
alpha0=0.00195233
imol=2
prt1_params=[41, 35, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=41
core1=35
alpha1=0.00195233
thole=2.0
(core0,natoms)=(36,14)
(core1,natoms)=(35,14)
screened_params=[13, 14, 2.0]
drude0=40
core0=34
alpha0=0.00195233
imol=2
prt1_params=[41, 35, -1, -1, -1, Quantity(value=-1.1478, unit=elementary charge), Quantity(value=0.00195233, unit=nanometer**3), 0.0, 0.0]
drude1=41
core1=35
alpha1=0.00195233
thole=2.0
(core0,natoms)=(34,14)
(core1,natoms)=(35,14)
Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
%%%%%%%%%%%%%%%%%%%%%% Printing polarization.py elements %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
r_core = [[[-2.60800004e-01 -3.06800008e-01  5.30499995e-01]
  [-4.72999997e-02 -2.92600006e-01  1.72000006e-01]
  [ 1.65999994e-01 -6.35900021e-01  2.22000003e-01]
  [-1.00000001e-01 -6.53299987e-01  6.61400020e-01]
  [-3.05799991e-01 -6.00000028e-04  2.75599986e-01]
  [ 2.74999999e-02 -2.24700004e-01  0.00000000e+00]
  [ 2.48000007e-02 -5.07499993e-01  2.94099987e-01]
  [-1.08400002e-01 -5.14599979e-01  5.13499975e-01]
  [-2.17399999e-01 -1.77699998e-01  3.21099997e-01]]

 [[-3.04399997e-01  3.97199988e-01 -4.69300002e-01]
  [-5.17899990e-01  3.82999986e-01 -1.10900000e-01]
  [-7.31199980e-01  7.26199985e-01 -1.60899997e-01]
  [-4.65200007e-01  7.43600011e-01 -6.00300014e-01]
  [-2.59400010e-01  9.08999965e-02 -2.14399993e-01]
  [-5.92700005e-01  3.15100014e-01  6.12000003e-02]
  [-5.89999974e-01  5.97800016e-01 -2.32899994e-01]
  [-4.56800014e-01  6.04900002e-01 -4.52300012e-01]
  [-3.47799987e-01  2.68099993e-01 -2.59900004e-01]]

 [[ 1.87500000e-01 -1.10299997e-01 -2.78699994e-01]
  [ 4.00900006e-01 -1.24499999e-01 -6.37199998e-01]
  [ 6.14199996e-01  2.18700007e-01 -5.87199986e-01]
  [ 3.48199993e-01  2.36100003e-01 -1.47799999e-01]
  [ 1.42399997e-01 -4.16599989e-01 -5.33599973e-01]
  [ 4.75699991e-01 -1.92399994e-01 -8.09199989e-01]
  [ 4.72999990e-01  9.03000012e-02 -5.15100002e-01]
  [ 3.39899987e-01  9.74000022e-02 -2.95700014e-01]
  [ 2.30800003e-01 -2.39399999e-01 -4.88099992e-01]]]
r_core[jnp.newaxis, :, jnp.newaxis, :] = [[[[[-2.60800004e-01 -3.06800008e-01  5.30499995e-01]
    [-4.72999997e-02 -2.92600006e-01  1.72000006e-01]
    [ 1.65999994e-01 -6.35900021e-01  2.22000003e-01]
    [-1.00000001e-01 -6.53299987e-01  6.61400020e-01]
    [-3.05799991e-01 -6.00000028e-04  2.75599986e-01]
    [ 2.74999999e-02 -2.24700004e-01  0.00000000e+00]
    [ 2.48000007e-02 -5.07499993e-01  2.94099987e-01]
    [-1.08400002e-01 -5.14599979e-01  5.13499975e-01]
    [-2.17399999e-01 -1.77699998e-01  3.21099997e-01]]]


  [[[-3.04399997e-01  3.97199988e-01 -4.69300002e-01]
    [-5.17899990e-01  3.82999986e-01 -1.10900000e-01]
    [-7.31199980e-01  7.26199985e-01 -1.60899997e-01]
    [-4.65200007e-01  7.43600011e-01 -6.00300014e-01]
    [-2.59400010e-01  9.08999965e-02 -2.14399993e-01]
    [-5.92700005e-01  3.15100014e-01  6.12000003e-02]
    [-5.89999974e-01  5.97800016e-01 -2.32899994e-01]
    [-4.56800014e-01  6.04900002e-01 -4.52300012e-01]
    [-3.47799987e-01  2.68099993e-01 -2.59900004e-01]]]


  [[[ 1.87500000e-01 -1.10299997e-01 -2.78699994e-01]
    [ 4.00900006e-01 -1.24499999e-01 -6.37199998e-01]
    [ 6.14199996e-01  2.18700007e-01 -5.87199986e-01]
    [ 3.48199993e-01  2.36100003e-01 -1.47799999e-01]
    [ 1.42399997e-01 -4.16599989e-01 -5.33599973e-01]
    [ 4.75699991e-01 -1.92399994e-01 -8.09199989e-01]
    [ 4.72999990e-01  9.03000012e-02 -5.15100002e-01]
    [ 3.39899987e-01  9.74000022e-02 -2.95700014e-01]
    [ 2.30800003e-01 -2.39399999e-01 -4.88099992e-01]]]]]
r_core.shape=(3, 9, 3) -> (1, 3, 1, 9, 3); Rij.shape = (3, 3, 9, 9, 3)

Rij = [[[[[ 0.          0.          0.        ]
    [ 0.2135      0.0142     -0.35849999]
    [ 0.4268     -0.32910001 -0.30849999]
    ...
    [ 0.2856     -0.20069999 -0.23640001]
    [ 0.1524     -0.20779997 -0.01700002]
    [ 0.0434      0.12910001 -0.2094    ]]

   [[-0.2135     -0.0142      0.35849999]
    [ 0.          0.          0.        ]
    [ 0.21329999 -0.34330001  0.05      ]
    ...
    [ 0.0721     -0.21489999  0.12209998]
    [-0.0611     -0.22199997  0.34149997]
    [-0.1701      0.11490001  0.14909999]]

   [[-0.4268      0.32910001  0.30849999]
    [-0.21329999  0.34330001 -0.05      ]
    [ 0.          0.          0.        ]
    ...
    [-0.14119999  0.12840003  0.07209998]
    [-0.2744      0.12130004  0.29149997]
    [-0.38339999  0.45820002  0.09909999]]

   ...

   [[-0.2856      0.20069999  0.23640001]
    [-0.0721      0.21489999 -0.12209998]
    [ 0.14119999 -0.12840003 -0.07209998]
    ...
    [ 0.          0.          0.        ]
    [-0.1332     -0.00709999  0.21939999]
    [-0.2422      0.32979999  0.02700001]]

   [[-0.1524      0.20779997  0.01700002]
    [ 0.0611      0.22199997 -0.34149997]
    [ 0.2744     -0.12130004 -0.29149997]
    ...
    [ 0.1332      0.00709999 -0.21939999]
    [ 0.          0.          0.        ]
    [-0.109       0.33689998 -0.19239998]]

   [[-0.0434     -0.12910001  0.2094    ]
    [ 0.1701     -0.11490001 -0.14909999]
    [ 0.38339999 -0.45820002 -0.09909999]
    ...
    [ 0.2422     -0.32979999 -0.02700001]
    [ 0.109      -0.33689998  0.19239998]
    [ 0.          0.          0.        ]]]


  [[[-0.04359999  0.704      -0.9998    ]
    [-0.25709999  0.68979999 -0.64139999]
    [-0.47039998  1.03299999 -0.69139999]
    ...
    [-0.32919997  0.90460002 -0.76339999]
    [-0.19600001  0.91170001 -0.98280001]
    [-0.08699998  0.5749     -0.7904    ]]

   [[-0.2571      0.68979999 -0.64130001]
    [-0.47059999  0.67559999 -0.28290001]
    [-0.68389998  1.01879999 -0.3329    ]
    ...
    [-0.54269997  0.89040002 -0.4049    ]
    [-0.40950001  0.89750001 -0.62430002]
    [-0.30049999  0.5607     -0.43190001]]

   [[-0.47039999  1.03310001 -0.6913    ]
    [-0.68389998  1.01890001 -0.3329    ]
    [-0.89719997  1.36210001 -0.3829    ]
    ...
    [-0.75599997  1.23370004 -0.4549    ]
    [-0.62280001  1.24080002 -0.67430001]
    [-0.51379998  0.90400001 -0.48190001]]

   ...

   [[-0.3292      0.90469998 -0.76339999]
    [-0.54269999  0.89049998 -0.40499999]
    [-0.75599998  1.23369998 -0.45499998]
    ...
    [-0.61479997  1.10530001 -0.52699998]
    [-0.48160001  1.1124     -0.7464    ]
    [-0.37259999  0.77559999 -0.55399999]]

   [[-0.19599999  0.91179997 -0.98279998]
    [-0.40949999  0.89759997 -0.62439997]
    [-0.62279998  1.24079996 -0.67439997]
    ...
    [-0.48159997  1.1124     -0.74639997]
    [-0.34840001  1.11949998 -0.96579999]
    [-0.23939998  0.78269997 -0.77339998]]

   [[-0.087       0.57489999 -0.7904    ]
    [-0.30049999  0.56069998 -0.432     ]
    [-0.51379998  0.90389998 -0.48199999]
    ...
    [-0.37259997  0.77550001 -0.55399999]
    [-0.23940001  0.7826     -0.77340001]
    [-0.13039999  0.44579999 -0.581     ]]]


  [[[ 0.4483      0.19650001 -0.80919999]
    [ 0.66170001  0.18230001 -1.16769999]
    [ 0.875       0.52550001 -1.11769998]
    ...
    [ 0.73379999  0.39710001 -1.0456    ]
    [ 0.60069999  0.40420001 -0.82620001]
    [ 0.49160001  0.06740001 -1.01859999]]

   [[ 0.2348      0.18230001 -0.4507    ]
    [ 0.44820001  0.16810001 -0.8092    ]
    [ 0.6615      0.51130001 -0.75919999]
    ...
    [ 0.52029999  0.38290001 -0.68710001]
    [ 0.38719999  0.39000001 -0.46770002]
    [ 0.2781      0.05320001 -0.6601    ]]

   [[ 0.02150001  0.52560002 -0.5007    ]
    [ 0.23490001  0.51140002 -0.8592    ]
    [ 0.4482      0.85460003 -0.80919999]
    ...
    [ 0.307       0.72620002 -0.73710001]
    [ 0.17389999  0.73330002 -0.51770002]
    [ 0.06480001  0.39650002 -0.7101    ]]

   ...

   [[ 0.1627      0.3972     -0.57279998]
    [ 0.37610001  0.38299999 -0.93129998]
    [ 0.5894      0.7262     -0.88129997]
    ...
    [ 0.44819999  0.59779999 -0.80919999]
    [ 0.31509999  0.6049     -0.5898    ]
    [ 0.206       0.26809999 -0.78219998]]

   [[ 0.2959      0.40429998 -0.79219997]
    [ 0.50930001  0.39009998 -1.15069997]
    [ 0.7226      0.73329999 -1.10069996]
    ...
    [ 0.58139999  0.60489998 -1.02859998]
    [ 0.44829999  0.61199998 -0.80919999]
    [ 0.3392      0.27519998 -1.00159997]]

   [[ 0.4049      0.0674     -0.59979999]
    [ 0.61830001  0.0532     -0.95829999]
    [ 0.8316      0.3964     -0.90829998]
    ...
    [ 0.69039999  0.268      -0.8362    ]
    [ 0.55729999  0.2751     -0.61680001]
    [ 0.4482     -0.0617     -0.80919999]]]]



 [[[[ 0.04359999 -0.704       0.9998    ]
    [ 0.2571     -0.68979999  0.64130001]
    [ 0.47039999 -1.03310001  0.6913    ]
    ...
    [ 0.3292     -0.90469998  0.76339999]
    [ 0.19599999 -0.91179997  0.98279998]
    [ 0.087      -0.57489999  0.7904    ]]

   [[ 0.25709999 -0.68979999  0.64139999]
    [ 0.47059999 -0.67559999  0.28290001]
    [ 0.68389998 -1.01890001  0.3329    ]
    ...
    [ 0.54269999 -0.89049998  0.40499999]
    [ 0.40949999 -0.89759997  0.62439997]
    [ 0.30049999 -0.56069998  0.432     ]]

   [[ 0.47039998 -1.03299999  0.69139999]
    [ 0.68389998 -1.01879999  0.3329    ]
    [ 0.89719997 -1.36210001  0.3829    ]
    ...
    [ 0.75599998 -1.23369998  0.45499998]
    [ 0.62279998 -1.24079996  0.67439997]
    [ 0.51379998 -0.90389998  0.48199999]]

   ...

   [[ 0.32919997 -0.90460002  0.76339999]
    [ 0.54269997 -0.89040002  0.4049    ]
    [ 0.75599997 -1.23370004  0.4549    ]
    ...
    [ 0.61479997 -1.10530001  0.52699998]
    [ 0.48159997 -1.1124      0.74639997]
    [ 0.37259997 -0.77550001  0.55399999]]

   [[ 0.19600001 -0.91170001  0.98280001]
    [ 0.40950001 -0.89750001  0.62430002]
    [ 0.62280001 -1.24080002  0.67430001]
    ...
    [ 0.48160001 -1.1124      0.7464    ]
    [ 0.34840001 -1.11949998  0.96579999]
    [ 0.23940001 -0.7826      0.77340001]]

   [[ 0.08699998 -0.5749      0.7904    ]
    [ 0.30049999 -0.5607      0.43190001]
    [ 0.51379998 -0.90400001  0.48190001]
    ...
    [ 0.37259999 -0.77559999  0.55399999]
    [ 0.23939998 -0.78269997  0.77339998]
    [ 0.13039999 -0.44579999  0.581     ]]]


  [[[ 0.          0.          0.        ]
    [-0.21349999 -0.0142      0.3584    ]
    [-0.42679998  0.329       0.30840001]
    ...
    [-0.28559998  0.20060003  0.23640001]
    [-0.15240002  0.20770001  0.01699999]
    [-0.04339999 -0.12909999  0.2094    ]]

   [[ 0.21349999  0.0142     -0.3584    ]
    [ 0.          0.          0.        ]
    [-0.21329999  0.3432     -0.05      ]
    ...
    [-0.07209998  0.21480003 -0.12199999]
    [ 0.06109998  0.22190002 -0.34140001]
    [ 0.1701     -0.11489999 -0.149     ]]

   [[ 0.42679998 -0.329      -0.30840001]
    [ 0.21329999 -0.3432      0.05      ]
    [ 0.          0.          0.        ]
    ...
    [ 0.14120001 -0.12839997 -0.072     ]
    [ 0.27439997 -0.12129998 -0.29140002]
    [ 0.38339999 -0.45809999 -0.09900001]]

   ...

   [[ 0.28559998 -0.20060003 -0.23640001]
    [ 0.07209998 -0.21480003  0.12199999]
    [-0.14120001  0.12839997  0.072     ]
    ...
    [ 0.          0.          0.        ]
    [ 0.13319996  0.00709999 -0.21940002]
    [ 0.24219999 -0.32970002 -0.02700001]]

   [[ 0.15240002 -0.20770001 -0.01699999]
    [-0.06109998 -0.22190002  0.34140001]
    [-0.27439997  0.12129998  0.29140002]
    ...
    [-0.13319996 -0.00709999  0.21940002]
    [ 0.          0.          0.        ]
    [ 0.10900003 -0.33680001  0.19240001]]

   [[ 0.04339999  0.12909999 -0.2094    ]
    [-0.1701      0.11489999  0.149     ]
    [-0.38339999  0.45809999  0.09900001]
    ...
    [-0.24219999  0.32970002  0.02700001]
    [-0.10900003  0.33680001 -0.19240001]
    [ 0.          0.          0.        ]]]


  [[[ 0.4919     -0.50749999  0.19060001]
    [ 0.7053     -0.52169999 -0.1679    ]
    [ 0.91859999 -0.17849998 -0.11789998]
    ...
    [ 0.77739999 -0.30689999 -0.0458    ]
    [ 0.64429998 -0.29979999  0.17359999]
    [ 0.5352     -0.63659999 -0.01879999]]

   [[ 0.70539999 -0.49329998 -0.16779999]
    [ 0.9188     -0.50749999 -0.5263    ]
    [ 1.13209999 -0.16429998 -0.47629999]
    ...
    [ 0.99089998 -0.29269999 -0.4042    ]
    [ 0.85779998 -0.28559998 -0.18480001]
    [ 0.74869999 -0.62239999 -0.37719999]]

   [[ 0.91869998 -0.83649998 -0.1178    ]
    [ 1.13209999 -0.85069998 -0.4763    ]
    [ 1.34539998 -0.50749998 -0.42629999]
    ...
    [ 1.20419997 -0.63589998 -0.35420001]
    [ 1.07109997 -0.62879998 -0.13480002]
    [ 0.96199998 -0.96559998 -0.3272    ]]

   ...

   [[ 0.77749997 -0.70810001 -0.0458    ]
    [ 0.99089998 -0.72230002 -0.4043    ]
    [ 1.20419997 -0.37910001 -0.35429999]
    ...
    [ 1.06299996 -0.50750002 -0.28220001]
    [ 0.92989996 -0.50040001 -0.06280002]
    [ 0.82079998 -0.83720002 -0.2552    ]]

   [[ 0.64430001 -0.7152      0.17360002]
    [ 0.85770002 -0.7294     -0.18489999]
    [ 1.07100001 -0.3862     -0.13489997]
    ...
    [ 0.9298     -0.5146     -0.06279999]
    [ 0.7967     -0.5075      0.1566    ]
    [ 0.68760002 -0.8443     -0.03579998]]

   [[ 0.53529999 -0.37839999 -0.01879999]
    [ 0.74869999 -0.39259999 -0.37729999]
    [ 0.96199998 -0.04939999 -0.32729998]
    ...
    [ 0.82079998 -0.17779999 -0.2552    ]
    [ 0.68769997 -0.17069999 -0.03580001]
    [ 0.57859999 -0.50749999 -0.22819999]]]]



 [[[[-0.4483     -0.19650001  0.80919999]
    [-0.2348     -0.18230001  0.4507    ]
    [-0.02150001 -0.52560002  0.5007    ]
    ...
    [-0.1627     -0.3972      0.57279998]
    [-0.2959     -0.40429998  0.79219997]
    [-0.4049     -0.0674      0.59979999]]

   [[-0.66170001 -0.18230001  1.16769999]
    [-0.44820001 -0.16810001  0.8092    ]
    [-0.23490001 -0.51140002  0.8592    ]
    ...
    [-0.37610001 -0.38299999  0.93129998]
    [-0.50930001 -0.39009998  1.15069997]
    [-0.61830001 -0.0532      0.95829999]]

   [[-0.875      -0.52550001  1.11769998]
    [-0.6615     -0.51130001  0.75919999]
    [-0.4482     -0.85460003  0.80919999]
    ...
    [-0.5894     -0.7262      0.88129997]
    [-0.7226     -0.73329999  1.10069996]
    [-0.8316     -0.3964      0.90829998]]

   ...

   [[-0.73379999 -0.39710001  1.0456    ]
    [-0.52029999 -0.38290001  0.68710001]
    [-0.307      -0.72620002  0.73710001]
    ...
    [-0.44819999 -0.59779999  0.80919999]
    [-0.58139999 -0.60489998  1.02859998]
    [-0.69039999 -0.268       0.8362    ]]

   [[-0.60069999 -0.40420001  0.82620001]
    [-0.38719999 -0.39000001  0.46770002]
    [-0.17389999 -0.73330002  0.51770002]
    ...
    [-0.31509999 -0.6049      0.5898    ]
    [-0.44829999 -0.61199998  0.80919999]
    [-0.55729999 -0.2751      0.61680001]]

   [[-0.49160001 -0.06740001  1.01859999]
    [-0.2781     -0.05320001  0.6601    ]
    [-0.06480001 -0.39650002  0.7101    ]
    ...
    [-0.206      -0.26809999  0.78219998]
    [-0.3392     -0.27519998  1.00159997]
    [-0.4482      0.0617      0.80919999]]]


  [[[-0.4919      0.50749999 -0.19060001]
    [-0.70539999  0.49329998  0.16779999]
    [-0.91869998  0.83649998  0.1178    ]
    ...
    [-0.77749997  0.70810001  0.0458    ]
    [-0.64430001  0.7152     -0.17360002]
    [-0.53529999  0.37839999  0.01879999]]

   [[-0.7053      0.52169999  0.1679    ]
    [-0.9188      0.50749999  0.5263    ]
    [-1.13209999  0.85069998  0.4763    ]
    ...
    [-0.99089998  0.72230002  0.4043    ]
    [-0.85770002  0.7294      0.18489999]
    [-0.74869999  0.39259999  0.37729999]]

   [[-0.91859999  0.17849998  0.11789998]
    [-1.13209999  0.16429998  0.47629999]
    [-1.34539998  0.50749998  0.42629999]
    ...
    [-1.20419997  0.37910001  0.35429999]
    [-1.07100001  0.3862      0.13489997]
    [-0.96199998  0.04939999  0.32729998]]

   ...

   [[-0.77739999  0.30689999  0.0458    ]
    [-0.99089998  0.29269999  0.4042    ]
    [-1.20419997  0.63589998  0.35420001]
    ...
    [-1.06299996  0.50750002  0.28220001]
    [-0.9298      0.5146      0.06279999]
    [-0.82079998  0.17779999  0.2552    ]]

   [[-0.64429998  0.29979999 -0.17359999]
    [-0.85779998  0.28559998  0.18480001]
    [-1.07109997  0.62879998  0.13480002]
    ...
    [-0.92989996  0.50040001  0.06280002]
    [-0.7967      0.5075     -0.1566    ]
    [-0.68769997  0.17069999  0.03580001]]

   [[-0.5352      0.63659999  0.01879999]
    [-0.74869999  0.62239999  0.37719999]
    [-0.96199998  0.96559998  0.3272    ]
    ...
    [-0.82079998  0.83720002  0.2552    ]
    [-0.68760002  0.8443      0.03579998]
    [-0.57859999  0.50749999  0.22819999]]]


  [[[ 0.          0.          0.        ]
    [ 0.21340001 -0.0142     -0.3585    ]
    [ 0.4267      0.329      -0.30849999]
    ...
    [ 0.28549999  0.2006     -0.23640001]
    [ 0.15239999  0.2077     -0.01700002]
    [ 0.0433     -0.1291     -0.2094    ]]

   [[-0.21340001  0.0142      0.3585    ]
    [ 0.          0.          0.        ]
    [ 0.21329999  0.34320001  0.05000001]
    ...
    [ 0.07209998  0.2148      0.1221    ]
    [-0.06100002  0.2219      0.34149998]
    [-0.1701     -0.1149      0.14910001]]

   [[-0.4267     -0.329       0.30849999]
    [-0.21329999 -0.34320001 -0.05000001]
    [ 0.          0.          0.        ]
    ...
    [-0.14120001 -0.12840001  0.07209998]
    [-0.27430001 -0.1213      0.29149997]
    [-0.38339999 -0.45810001  0.09909999]]

   ...

   [[-0.28549999 -0.2006      0.23640001]
    [-0.07209998 -0.2148     -0.1221    ]
    [ 0.14120001  0.12840001 -0.07209998]
    ...
    [ 0.          0.          0.        ]
    [-0.1331      0.0071      0.21939999]
    [-0.24219999 -0.3297      0.02700001]]

   [[-0.15239999 -0.2077      0.01700002]
    [ 0.06100002 -0.2219     -0.34149998]
    [ 0.27430001  0.1213     -0.29149997]
    ...
    [ 0.1331     -0.0071     -0.21939999]
    [ 0.          0.          0.        ]
    [-0.10909998 -0.3368     -0.19239998]]

   [[-0.0433      0.1291      0.2094    ]
    [ 0.1701      0.1149     -0.14910001]
    [ 0.38339999  0.45810001 -0.09909999]
    ...
    [ 0.24219999  0.3297     -0.02700001]
    [ 0.10909998  0.3368      0.19239998]
    [ 0.          0.          0.        ]]]]]

q_core = [[0.2885 0.4939 0.1294 0.1021 0.0374 0.3178 1.035  1.2032 1.5169]
 [0.2885 0.4939 0.1294 0.1021 0.0374 0.3178 1.035  1.2032 1.5169]
 [0.2885 0.4939 0.1294 0.1021 0.0374 0.3178 1.035  1.2032 1.5169]]
q_core[:, jnp.newaxis, :, jnp.newaxis] = [[[[0.2885]
   [0.4939]
   [0.1294]
   [0.1021]
   [0.0374]
   [0.3178]
   [1.035 ]
   [1.2032]
   [1.5169]]]


 [[[0.2885]
   [0.4939]
   [0.1294]
   [0.1021]
   [0.0374]
   [0.3178]
   [1.035 ]
   [1.2032]
   [1.5169]]]


 [[[0.2885]
   [0.4939]
   [0.1294]
   [0.1021]
   [0.0374]
   [0.3178]
   [1.035 ]
   [1.2032]
   [1.5169]]]]
q_shell = [[-0.8404 -0.8404  0.      0.      0.      0.     -1.1478 -1.1478 -1.1478]
 [-0.8404 -0.8404  0.      0.      0.      0.     -1.1478 -1.1478 -1.1478]
 [-0.8404 -0.8404  0.      0.      0.      0.     -1.1478 -1.1478 -1.1478]]
q_shell[:, jnp.newaxis, :, jnp.newaxis] = [[[[-0.8404]
   [-0.8404]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [-1.1478]
   [-1.1478]
   [-1.1478]]]


 [[[-0.8404]
   [-0.8404]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [-1.1478]
   [-1.1478]
   [-1.1478]]]


 [[[-0.8404]
   [-0.8404]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [-1.1478]
   [-1.1478]
   [-1.1478]]]]

Qi_shell = [[[[-0.8404]
   [-0.8404]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [-1.1478]
   [-1.1478]
   [-1.1478]]]


 [[[-0.8404]
   [-0.8404]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [-1.1478]
   [-1.1478]
   [-1.1478]]]


 [[[-0.8404]
   [-0.8404]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [ 0.    ]
   [-1.1478]
   [-1.1478]
   [-1.1478]]]]
Qj_shell = [[[[-0.8404 -0.8404  0.      0.      0.      0.     -1.1478 -1.1478
    -1.1478]]

  [[-0.8404 -0.8404  0.      0.      0.      0.     -1.1478 -1.1478
    -1.1478]]

  [[-0.8404 -0.8404  0.      0.      0.      0.     -1.1478 -1.1478
    -1.1478]]]]
Qi_core = [[[[0.2885]
   [0.4939]
   [0.1294]
   [0.1021]
   [0.0374]
   [0.3178]
   [1.035 ]
   [1.2032]
   [1.5169]]]


 [[[0.2885]
   [0.4939]
   [0.1294]
   [0.1021]
   [0.0374]
   [0.3178]
   [1.035 ]
   [1.2032]
   [1.5169]]]


 [[[0.2885]
   [0.4939]
   [0.1294]
   [0.1021]
   [0.0374]
   [0.3178]
   [1.035 ]
   [1.2032]
   [1.5169]]]]
Qj_core = [[[[0.2885 0.4939 0.1294 0.1021 0.0374 0.3178 1.035  1.2032 1.5169]]

  [[0.2885 0.4939 0.1294 0.1021 0.0374 0.3178 1.035  1.2032 1.5169]]

  [[0.2885 0.4939 0.1294 0.1021 0.0374 0.3178 1.035  1.2032 1.5169]]]]

q_core.shape=(3, 9) -> Qi_core.shape=(3, 1, 9, 1) & Qj_core.shape = (1, 3, 1, 9)

Dij = [[[0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]]

 [[0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]]

 [[0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]
  [0. 0. 0.]]]

Thole Screening and Polarization!!
k = [[93757.16202091 93757.16202091     0.             0.
      0.             0.         93754.54035262 93754.54035262
  93754.54035262]
 [93757.16202091 93757.16202091     0.             0.
      0.             0.         93754.54035262 93754.54035262
  93754.54035262]
 [93757.16202091 93757.16202091     0.             0.
      0.             0.         93754.54035262 93754.54035262
  93754.54035262]]
_alphas = [[0.0010466  0.0010466         inf        inf        inf        inf
  0.00195233 0.00195233 0.00195233]
 [0.0010466  0.0010466         inf        inf        inf        inf
  0.00195233 0.00195233 0.00195233]
 [0.0010466  0.0010466         inf        inf        inf        inf
  0.00195233 0.00195233 0.00195233]]
tholes = [[[ 0.         19.69864796  0.          0.          0.
    0.         17.75446824 17.75446824 17.75446824]
  [19.69864796  0.          0.          0.          0.
    0.         17.75446824 17.75446824 17.75446824]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [17.75446824 17.75446824  0.          0.          0.
    0.          0.         16.00217147 16.00217147]
  [17.75446824 17.75446824  0.          0.          0.
    0.         16.00217147  0.         16.00217147]
  [17.75446824 17.75446824  0.          0.          0.
    0.         16.00217147 16.00217147  0.        ]]

 [[ 0.         19.69864796  0.          0.          0.
    0.         17.75446824 17.75446824 17.75446824]
  [19.69864796  0.          0.          0.          0.
    0.         17.75446824 17.75446824 17.75446824]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [17.75446824 17.75446824  0.          0.          0.
    0.          0.         16.00217147 16.00217147]
  [17.75446824 17.75446824  0.          0.          0.
    0.         16.00217147  0.         16.00217147]
  [17.75446824 17.75446824  0.          0.          0.
    0.         16.00217147 16.00217147  0.        ]]

 [[ 0.         19.69864796  0.          0.          0.
    0.         17.75446824 17.75446824 17.75446824]
  [19.69864796  0.          0.          0.          0.
    0.         17.75446824 17.75446824 17.75446824]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [ 0.          0.          0.          0.          0.
    0.          0.          0.          0.        ]
  [17.75446824 17.75446824  0.          0.          0.
    0.          0.         16.00217147 16.00217147]
  [17.75446824 17.75446824  0.          0.          0.
    0.         16.00217147  0.         16.00217147]
  [17.75446824 17.75446824  0.          0.          0.
    0.         16.00217147 16.00217147  0.        ]]]
u_scale = [[[[ 0.         19.69864796  0.          0.          0.
     0.         17.75446824 17.75446824 17.75446824]
   [19.69864796  0.          0.          0.          0.
     0.         17.75446824 17.75446824 17.75446824]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [17.75446824 17.75446824  0.          0.          0.
     0.          0.         16.00217147 16.00217147]
   [17.75446824 17.75446824  0.          0.          0.
     0.         16.00217147  0.         16.00217147]
   [17.75446824 17.75446824  0.          0.          0.
     0.         16.00217147 16.00217147  0.        ]]

  [[ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]]

  [[ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]]]


 [[[ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]]

  [[ 0.         19.69864796  0.          0.          0.
     0.         17.75446824 17.75446824 17.75446824]
   [19.69864796  0.          0.          0.          0.
     0.         17.75446824 17.75446824 17.75446824]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [17.75446824 17.75446824  0.          0.          0.
     0.          0.         16.00217147 16.00217147]
   [17.75446824 17.75446824  0.          0.          0.
     0.         16.00217147  0.         16.00217147]
   [17.75446824 17.75446824  0.          0.          0.
     0.         16.00217147 16.00217147  0.        ]]

  [[ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]]]


 [[[ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]]

  [[ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]]

  [[ 0.         19.69864796  0.          0.          0.
     0.         17.75446824 17.75446824 17.75446824]
   [19.69864796  0.          0.          0.          0.
     0.         17.75446824 17.75446824 17.75446824]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [ 0.          0.          0.          0.          0.
     0.          0.          0.          0.        ]
   [17.75446824 17.75446824  0.          0.          0.
     0.          0.         16.00217147 16.00217147]
   [17.75446824 17.75446824  0.          0.          0.
     0.         16.00217147  0.         16.00217147]
   [17.75446824 17.75446824  0.          0.          0.
     0.         16.00217147 16.00217147  0.        ]]]]

%%%%%%%%%%%%%%%%%%%%%% Printing polarization.py elements %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
U_pol = Traced<ConcreteArray(0.0, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(0., dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155511c09a60>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(0.5, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x15550cbe5440; to 'JaxprTracer' at 0x15550cbe5400>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550cbec490>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ConcreteArray(-20.280501371078504, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(-20.28050137, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550cb4a980>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(138.93545764438198, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x15550ca75c10; to 'JaxprTracer' at 0x15550ca75bd0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ca6fdf0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={}))

U_pol = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)>

U_pol = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ecaddf60>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1554ecb65a30; to 'JaxprTracer' at 0x1554ecb659f0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554ecb701f0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ecadf270>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1554ec9be750; to 'JaxprTracer' at 0x1554ec9be710>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554ec9c2a70>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={}))

U_pol = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ecaddc50>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1554ecba6ac0; to 'JaxprTracer' at 0x1554ecba6a30>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554eca4dcc0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ecadfb20>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1554eca651c0; to 'JaxprTracer' at 0x1554eca65180>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554eca615d0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={}))

U_pol = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ecade3a0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1554ecb64680; to 'JaxprTracer' at 0x1554ecb651d0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554ecaa52d0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550cd70110>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550cc486d0; to 'JaxprTracer' at 0x15550cc48550>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550cad5240>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={}))

U_pol = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ecadf750>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550c9e3920; to 'JaxprTracer' at 0x15550c9e39d0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554eca50310>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550cb68550>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1554ecb64310; to 'JaxprTracer' at 0x1554ecb64280>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550cbbb970>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={}))

U_pol = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ecadfdc0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550c97ca90; to 'JaxprTracer' at 0x15550c97cfa0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554ec8ded70>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ec934250>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1554ecb94d60; to 'JaxprTracer' at 0x1554ecb95130>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554ec9336a0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={}))

U_pol = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ecadf730>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550c9bd3a0; to 'JaxprTracer' at 0x15550c9bc2d0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554ec945cc0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ec9943e0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1554eca5cf90; to 'JaxprTracer' at 0x1554eca5d040>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554ec9928c0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={}))

JAXOPT.BFGS Minimizer completed in 28.790 seconds!!
U_pol = 0.8677151351325845 kJ/mol
U_coul = -21.959842307102857

OpenMM U_ind = 0.4163 kJ/mol
Python U_ind = -21.0921 kJ/mol
101.97% Error
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

