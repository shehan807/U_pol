Log started at: 2025-02-19 11:10:11
%%%%%%%%%%% STARTING IMIDAZOLE U_IND CALCULATION %%%%%%%%%%%%
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
=-=-=-=-=-=-=-=-=-=-=-=-OpenMM Output-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
total Energy = -0.027969241141590828 kJ/mol
<class 'openmm.openmm.NonbondedForce'>-0.02796924114227295 kJ/mol
<class 'openmm.openmm.DrudeForce'>6.821210263296962e-13 kJ/mol
<class 'openmm.openmm.CMMotionRemover'>0.0 kJ/mol
natoms_per_res=9
natoms=14
ncore=10
nmol=2
residue_list=<generator object Topology.residues at 0x15551066c1e0>
tholeMatrix.shape=(2, 9, 9)
Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
U_self = Traced<ConcreteArray(0.0, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(0., dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554fc0fdac0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(0.5, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x15551035a160; to 'JaxprTracer' at 0x15551035a120>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x155510361540>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ConcreteArray(35819.579579619436, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(35819.57957962, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102b2860>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(138.93545764438198, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x15550ffd59e0; to 'JaxprTracer' at 0x15550ffd59a0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ffcf130>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = -0.027899363956707612 kJ/mol
U_ind = Traced<ConcreteArray(35819.607478983395, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(35819.60747898, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102b2f60>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x1555100054e0; to 'JaxprTracer' at 0x1555100054a0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ffee920>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff02500>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550ffbe070; to 'JaxprTracer' at 0x15550ffbe030>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ffa7ac0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff03810>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fe12ed0; to 'JaxprTracer' at 0x15550fe12e90>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe1e1d0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff03870>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fe13790; to 'JaxprTracer' at 0x15550fe13750>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe1f850>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff021f0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550ff7eca0; to 'JaxprTracer' at 0x15550ff7ec60>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe7ebf0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fccc130>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fcca160; to 'JaxprTracer' at 0x15550fcca120>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fec1a80>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fccc1a0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fcca9d0; to 'JaxprTracer' at 0x15550fcca990>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fec2980>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff03470>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fe134c0; to 'JaxprTracer' at 0x15550fe12e40>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fce25c0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fd1c6a0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1555101fb8d0; to 'JaxprTracer' at 0x1555101fa990>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x155510247dc0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fd1c710>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15551022c130; to 'JaxprTracer' at 0x15551030fd40>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdc9ff0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff03480>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15551013d760; to 'JaxprTracer' at 0x15551013d130>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550feb26e0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102e8ae0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550ffbde90; to 'JaxprTracer' at 0x15550ffbdf90>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1555101c31f0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102e8b50>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550ffbd850; to 'JaxprTracer' at 0x15550ffbde00>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x155510214520>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff039b0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15551013ec00; to 'JaxprTracer' at 0x15551013ead0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd36e00>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102e8dc0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550febd4e0; to 'JaxprTracer' at 0x15550febcaf0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd9b430>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102e82e0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550febd170; to 'JaxprTracer' at 0x15550febf750>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fda0340>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff03130>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x155510264860; to 'JaxprTracer' at 0x155510264910>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fda2ef0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102e8410>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fdda5c0; to 'JaxprTracer' at 0x15550fddbac0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fc06fe0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102e8470>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fccad90; to 'JaxprTracer' at 0x15550fcca7b0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fc07e80>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

JAXOPT.BFGS Minimizer completed in 15.892 seconds!!
U_self = 1787.687207208567 kJ/mol
U_coul = 31752.939153614683 kJ/mol

U_coul_static = -0.027899363956707612 kJ/mol
U_ind = 33540.654260187206 kJ/mol

OpenMM U_ind = -0.0279692 kJ/mol
Python U_ind = 33540.6263608 kJ/mol
100.00% Error
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Log started at: 2025-02-19 11:12:27
%%%%%%%%%%% STARTING ACNIT U_IND CALCULATION %%%%%%%%%%%%
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
=-=-=-=-=-=-=-=-=-=-=-=-OpenMM Output-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
total Energy = 30.638228750183544 kJ/mol
<class 'openmm.openmm.NonbondedForce'>23.25384521484375 kJ/mol
<class 'openmm.openmm.DrudeForce'>7.3843835353397935 kJ/mol
<class 'openmm.openmm.CMMotionRemover'>0.0 kJ/mol
natoms_per_res=6
natoms=9
ncore=6
nmol=2
residue_list=<generator object Topology.residues at 0x15551066e4d0>
tholeMatrix.shape=(2, 6, 6)
Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
U_self = Traced<ConcreteArray(0.0, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(0., dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554fc0f9aa0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(0.5, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x155510355b20; to 'JaxprTracer' at 0x155510355ae0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15551033fbe0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ConcreteArray(41.58010263447545, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(41.58010263, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102b29c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(138.93545764438198, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x15550ffde480; to 'JaxprTracer' at 0x15550ffde440>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ffd1390>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = 41.58010263447516 kJ/mol
U_ind = Traced<ConcreteArray(2.913225216616411e-13, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(2.91322522e-13, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102b30c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x155510005f80; to 'JaxprTracer' at 0x155510005f40>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fff3130>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fefe6c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550ffb2de0; to 'JaxprTracer' at 0x15550ffb2da0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdcc220>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550feff9d0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fe17b00; to 'JaxprTracer' at 0x15550fe17ac0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe22a10>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550feffa30>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fe38400; to 'JaxprTracer' at 0x15550fe383c0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe23e20>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fefe3b0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fdde4d0; to 'JaxprTracer' at 0x15550fddd8b0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe8f100>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fe882f0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fcdeac0; to 'JaxprTracer' at 0x15550fcdea80>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fcda470>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fe88360>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fcdf330; to 'JaxprTracer' at 0x15550fcdf2f0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fcdb370>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550feff860>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fe16660; to 'JaxprTracer' at 0x15550fe15d60>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fceee60>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fe888c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fd36b60; to 'JaxprTracer' at 0x15550fd36b20>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd2fdf0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155550acf1e0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1555103b0fe0; to 'JaxprTracer' at 0x1555103b0e10>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15551037a5c0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fefe870>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x155510140e50; to 'JaxprTracer' at 0x155510140910>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fcd0070>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fe88cc0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fe073d0; to 'JaxprTracer' at 0x15550fe07480>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd47580>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fe88d30>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fe06890; to 'JaxprTracer' at 0x15550fe06800>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1555103b4850>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550feff900>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550ffdd8a0; to 'JaxprTracer' at 0x15550ffdfca0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fda4130>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fe88fa0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fe3b330; to 'JaxprTracer' at 0x15550fe3a7b0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdb08b0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fe88a80>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fddfab0; to 'JaxprTracer' at 0x15550fddfa70>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdb1840>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fefe960>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1555100de700; to 'JaxprTracer' at 0x1555100de620>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdb3f10>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fe88660>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fdf0360; to 'JaxprTracer' at 0x15550fdf3340>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fc1c550>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fe88880>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fcdd6c0; to 'JaxprTracer' at 0x15550fcdcd20>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fc1d390>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

JAXOPT.BFGS Minimizer completed in 10.914 seconds!!
U_self = 8.86280074466493 kJ/mol
U_coul = 21.775470389822022 kJ/mol

U_coul_static = 41.58010263447516 kJ/mol
U_ind = -10.941831499988208 kJ/mol

OpenMM U_ind = 30.6382288 kJ/mol
Python U_ind = 30.6382711 kJ/mol
0.00% Error
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Log started at: 2025-02-19 11:13:54
%%%%%%%%%%% STARTING IMIDAZOLE U_IND CALCULATION %%%%%%%%%%%%
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
=-=-=-=-=-=-=-=-=-=-=-=-OpenMM Output-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
total Energy = -21.092894531010643 kJ/mol
<class 'openmm.openmm.NonbondedForce'>-21.928237915039062 kJ/mol
<class 'openmm.openmm.DrudeForce'>0.8353433840284197 kJ/mol
<class 'openmm.openmm.CMMotionRemover'>0.0 kJ/mol
natoms_per_res=9
natoms=14
ncore=15
nmol=3
residue_list=<generator object Topology.residues at 0x15551066c1e0>
tholeMatrix.shape=(3, 9, 9)
Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
U_self = Traced<ConcreteArray(0.0, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(0., dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554fc0fdaa0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(0.5, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x1554e9962660; to 'JaxprTracer' at 0x1554e9962620>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554e9971cf0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ConcreteArray(-20.280501153273995, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(-20.28050115, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555103ba9c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(138.93545764438198, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x1555100d6f70; to 'JaxprTracer' at 0x1555100d6f30>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1555100ed4b0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = -20.280501153273534 kJ/mol
U_ind = Traced<ConcreteArray(-4.618527782440651e-13, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(-4.61852778e-13, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555103bb0c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x155510106a70; to 'JaxprTracer' at 0x155510106a30>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x155510110c70>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fffe6c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1555100af880; to 'JaxprTracer' at 0x1555100af840>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fed1cf0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ffff9d0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550ff345e0; to 'JaxprTracer' at 0x15550ff345a0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ff38340>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ffffa30>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550ff34ea0; to 'JaxprTracer' at 0x15550ff34e60>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ff39750>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fffe3b0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fede4d0; to 'JaxprTracer' at 0x15550fedd900>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdd0a90>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c2f0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fde7560; to 'JaxprTracer' at 0x15550fde7520>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdec250>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c360>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fde7dd0; to 'JaxprTracer' at 0x15550fde7d90>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fded2a0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ffff860>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1555100ac0e0; to 'JaxprTracer' at 0x1555100adb80>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe2ce20>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c860>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1554e99bda30; to 'JaxprTracer' at 0x1554e99be8f0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ff38280>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c8d0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15551032fba0; to 'JaxprTracer' at 0x15551032fe80>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ff3b1c0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fffeca0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x155510247fb0; to 'JaxprTracer' at 0x155510246530>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550feef910>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8cca0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550ff0e610; to 'JaxprTracer' at 0x15550ff0c550>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554e9978c40>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8cd10>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1555100af6a0; to 'JaxprTracer' at 0x1555100af0c0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554e9979ff0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fffe980>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x155510246340; to 'JaxprTracer' at 0x155510247fc0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe5c760>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8cf80>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fefb100; to 'JaxprTracer' at 0x15550fefa6c0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fead270>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8ca60>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fefa3e0; to 'JaxprTracer' at 0x15550fefa8f0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550feae290>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fffedf0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1555102213a0; to 'JaxprTracer' at 0x155510221400>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fcd8f70>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c620>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fde4a40; to 'JaxprTracer' at 0x15550fde5cc0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd19420>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8cb00>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fde5990; to 'JaxprTracer' at 0x15550fde6490>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd1a380>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

JAXOPT.BFGS Minimizer completed in 11.299 seconds!!
U_self = 0.8677151133723906 kJ/mol
U_coul = -21.959842049021386 kJ/mol

U_coul_static = -20.280501153273534 kJ/mol
U_ind = -0.811625782375462 kJ/mol

OpenMM U_ind = -21.0928945 kJ/mol
Python U_ind = -21.0921269 kJ/mol
0.00% Error
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Log started at: 2025-02-19 11:19:42
%%%%%%%%%%% STARTING IMIDAZOLE2 U_IND CALCULATION %%%%%%%%%%%%
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
=-=-=-=-=-=-=-=-=-=-=-=-OpenMM Output-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
total Energy = -0.027969241141590828 kJ/mol
<class 'openmm.openmm.NonbondedForce'>-0.02796924114227295 kJ/mol
<class 'openmm.openmm.DrudeForce'>6.821210263296962e-13 kJ/mol
<class 'openmm.openmm.CMMotionRemover'>0.0 kJ/mol
natoms_per_res=9
natoms=14
ncore=10
nmol=2
residue_list=<generator object Topology.residues at 0x15551066c1e0>
tholeMatrix.shape=(2, 9, 9)
Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
U_self = Traced<ConcreteArray(0.0, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(0., dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554fc0fda90>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(0.5, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x15551035a160; to 'JaxprTracer' at 0x15551035a120>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x155510365330>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ConcreteArray(-0.02789936395677654, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(-0.02789936, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102b29b0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(138.93545764438198, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x15550ffdea20; to 'JaxprTracer' at 0x15550ffde9e0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ffec100>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = -0.027899363956707612 kJ/mol
U_ind = Traced<ConcreteArray(-6.892750259446245e-14, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(-6.89275026e-14, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555102b30b0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x155510006520; to 'JaxprTracer' at 0x1555100064e0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ffef760>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff026b0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550ffaf330; to 'JaxprTracer' at 0x15550ffaf2f0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdcd5a0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff039c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fe34090; to 'JaxprTracer' at 0x15550fe34050>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe27940>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff03a20>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fe34950; to 'JaxprTracer' at 0x15550fe34910>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fe30ee0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff023a0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fddb830; to 'JaxprTracer' at 0x15550fdda990>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fcc8460>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fce02e0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fcdf010; to 'JaxprTracer' at 0x15550fcdefd0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fcd74c0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fce0350>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fcdf880; to 'JaxprTracer' at 0x15550fcdf840>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fce86d0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff03850>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550ffaf010; to 'JaxprTracer' at 0x15550ffaedf0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd28490>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fd2c850>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1555101fb830; to 'JaxprTracer' at 0x1555101fa8f0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fded210>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550fd2c8c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15551022b060; to 'JaxprTracer' at 0x15551022a530>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdef940>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff02c90>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x155510146020; to 'JaxprTracer' at 0x155510144aa0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fccc4f0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510024c90>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fe1d5d0; to 'JaxprTracer' at 0x15550fe1c910>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x155510369360>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510024d00>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fe1cf40; to 'JaxprTracer' at 0x15550fe1da40>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15551036a7a0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff02970>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x155510161300; to 'JaxprTracer' at 0x155510161090>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd5d000>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510024f70>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fdd89a0; to 'JaxprTracer' at 0x15550fddb3e0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdb1930>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510024490>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fddb470; to 'JaxprTracer' at 0x15550fdd9bd0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdb2860>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff02de0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1555102b5850; to 'JaxprTracer' at 0x1555102b5f40>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fbd9390>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555100240d0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fcdf650; to 'JaxprTracer' at 0x15550fcdf610>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fc19900>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510024530>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fcde160; to 'JaxprTracer' at 0x15550fcde3a0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fc1a770>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

JAXOPT.BFGS Minimizer completed in 27.181 seconds!!
U_self = 1.0624506128723046e-05 kJ/mol
U_coul = -0.027921291944050453 kJ/mol

U_coul_static = -0.027899363956707612 kJ/mol
U_ind = -1.1303481214117831e-05 kJ/mol

OpenMM U_ind = -0.0279692 kJ/mol
Python U_ind = -0.0279107 kJ/mol
0.21% Error
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Log started at: 2025-02-19 11:24:41
%%%%%%%%%%% STARTING IMIDAZOLE2 U_IND CALCULATION %%%%%%%%%%%%
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
=-=-=-=-=-=-=-=-=-=-=-=-OpenMM Output-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
total Energy = -0.027930725595069816 kJ/mol
<class 'openmm.openmm.NonbondedForce'>-0.02796626091003418 kJ/mol
<class 'openmm.openmm.DrudeForce'>3.553531496436335e-05 kJ/mol
<class 'openmm.openmm.CMMotionRemover'>0.0 kJ/mol
natoms_per_res=9
natoms=14
ncore=10
nmol=2
residue_list=<generator object Topology.residues at 0x15551066c1e0>
tholeMatrix.shape=(2, 9, 9)
Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
U_self = Traced<ConcreteArray(0.0, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(0., dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1554ee189ab0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(0.5, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x1554e852a2f0; to 'JaxprTracer' at 0x1554e852a2b0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554e853c940>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ConcreteArray(-0.02789939154147354, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(-0.02789939, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555103b69d0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ConcreteArray(138.93545764438198, dtype=float64):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x1555100dec50; to 'JaxprTracer' at 0x1555100dec10>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1555100ed990>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = -0.027899391541432565 kJ/mol
U_ind = Traced<ConcreteArray(-4.0974168502572184e-14, dtype=float64)>with<JVPTrace(level=2/1)> with
  primal = Array(-4.09741685e-14, dtype=float64)
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555103b70d0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=1/1)>), out_tracer_refs=[<weakref at 0x155510106750; to 'JaxprTracer' at 0x155510106710>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15551010a320>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=1/1)> kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555100066d0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1555100b35b0; to 'JaxprTracer' at 0x1555100b3570>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1555100bf0a0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555100079e0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550ff34310; to 'JaxprTracer' at 0x15550ff342d0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ff2d810>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510007a40>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550ff34bd0; to 'JaxprTracer' at 0x15550ff34b90>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ff2ec20>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1555100063c0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fedfab0; to 'JaxprTracer' at 0x15550fedec10>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdcde70>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c300>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fde3290; to 'JaxprTracer' at 0x15550fde3250>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fde5030>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c370>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15550fde3b00; to 'JaxprTracer' at 0x15550fde3ac0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fde6080>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510007870>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x1555100b1760; to 'JaxprTracer' at 0x1555100b18b0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fdf9b10>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c870>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x155510302b10; to 'JaxprTracer' at 0x1555103028a0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fee8a90>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=4/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=2/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=3/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c8e0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=3/1)>), out_tracer_refs=[<weakref at 0x15551032b240; to 'JaxprTracer' at 0x15551032a710>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550feeb3d0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510006cb0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x155510248ef0; to 'JaxprTracer' at 0x155510248f50>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ff1dba0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8ccb0>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550ff13dd0; to 'JaxprTracer' at 0x15550ff13e30>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554e858a2c0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8cd20>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1555100b2b10; to 'JaxprTracer' at 0x1555100b28f0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x1554e858b610>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510006990>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1555102662f0; to 'JaxprTracer' at 0x1555102640a0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550ff0c0d0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8cf90>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fefe4d0; to 'JaxprTracer' at 0x15550fefd2c0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550feba3b0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8ca70>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fefdf30; to 'JaxprTracer' at 0x15550feff430>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550febb1f0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_self = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x155510006e00>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x1555103bfce0; to 'JaxprTracer' at 0x1555103be5d0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fcd5ab0>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol
U_coul = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8c630>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fde2e30; to 'JaxprTracer' at 0x15550fde37f0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = mul b a in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_multiply', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd22050>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

U_coul_static = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)> kJ/mol
U_ind = Traced<ShapedArray(float64[])>with<JVPTrace(level=5/1)> with
  primal = Traced<ShapedArray(float64[])>with<DynamicJaxprTrace(level=3/1)>
  tangent = Traced<ShapedArray(float64[])>with<JaxprTrace(level=4/1)> with
    pval = (ShapedArray(float64[]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x15550ff8cb10>, in_tracers=(Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>, Traced<ShapedArray(float64[]):JaxprTrace(level=4/1)>), out_tracer_refs=[<weakref at 0x15550fde21b0; to 'JaxprTracer' at 0x15550fde33e0>], out_avals=[ShapedArray(float64[])], primitive=pjit, params={'jaxpr': { lambda ; a:f64[] b:f64[]. let c:f64[] = add a b in (c,) }, 'in_shardings': (UnspecifiedValue, UnspecifiedValue), 'out_shardings': (UnspecifiedValue,), 'in_layouts': (None, None), 'out_layouts': (None,), 'resource_env': None, 'donated_invars': (False, False), 'name': '_add', 'keep_unused': False, 'inline': True}, effects=set(), source_info=<jax._src.source_info_util.SourceInfo object at 0x15550fd22e90>, ctx=JaxprEqnContext(compute_type=None, threefry_partitionable=False, xla_metadata={})) kJ/mol

JAXOPT.BFGS Minimizer completed in 12.384 seconds!!
U_self = 1.0624437900737302e-05 kJ/mol
U_coul = -0.027921319462772598 kJ/mol

U_coul_static = -0.027899391541432565 kJ/mol
U_ind = -1.1303483439296189e-05 kJ/mol

OpenMM U_ind = -0.0279307 kJ/mol
Python U_ind = -0.0279107 kJ/mol
0.07% Error
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

